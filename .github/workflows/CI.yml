# CI Workflow for the project

name: ci

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 2 * * 0'

env:
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [nightly, beta, stable]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update ${{ matrix.rust }}
      - run: cargo test
      - run: cargo build --all --all-features --all-targets
      - run: cargo build --no-default-features --features gl,egl,glx,wgl
      - run: cargo build --no-default-features
      - name: Build for wasm32-unknown-unknown
        run: cargo build --target wasm32-unknown-unknown --no-default-features --features gl
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
  
  msrv:
    strategy:
      matrix:
        rust: [1.65.0]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update ${{ matrix.rust }}
      - run: cargo test
      - run: cargo build --all --all-features --all-targets
      - run: cargo build --no-default-features --features gl,egl,glx,wgl
      - run: cargo build --no-default-features

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - run: cargo clippy --all-features --all-targets

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - run: cargo fmt --all --check